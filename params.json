{"name":"CarbonCopy","tagline":"","body":"### What is it?\r\n\r\n\r\n\r\n\r\nCarbonCopy is a Visual Studio Extension that generates the declaration and initialization of an object selected while debugging. \r\n\r\n\r\n\r\n### What the critics are saying about CarbonCopy:\r\n\r\n\r\n_\"This tool is a must for anyone serious about test automation and refactoring.\"_  \r\n      - Me\r\n\r\n\r\n_\"Damn this is clever!\"_ \r\n      - Me again\r\n\r\n\r\n_\"CarbonCopy is so lightweight, yet so powerful it should be shipped as part of Visual Studio.\"_ \r\n      - My grandmother\r\n\r\n\r\n\r\n### CarbonCopy in action\r\n\r\nThe best way to grasp the potential of the tool is to illustrate it in action with one of many interesting uses.\r\n\r\nSuppose you are refactoring a function that is not covered by an automated test.  While debugging an actual test case, the function returns an object that would be long to declare from scratch in a test:\r\n\r\n\r\nBy selecting the object and clicking the \"Copy declaration\" menu item provided by CarbonCopy, its declaration is generated and copied to the clipboard.\r\n<img2>\r\n\r\n\r\nYou can then paste this declaration as your expected result in an automated test and refactor the function in full confidence:\r\n<img3>\r\n\r\n### Support or Contact\r\nHaving trouble with CarbonCopy? Contact @jmethot79.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}